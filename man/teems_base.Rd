% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/usr_teems_base.R
\name{teems_base}
\alias{teems_base}
\title{Load data specifications}
\usage{
teems_base(
  dat_har,
  header_rename = NULL,
  coefficient_rename = NULL,
  preagg_data = NULL,
  postagg_data = NULL,
  verbose = FALSE
)
}
\arguments{
\item{dat_har}{Character of length 1, file name in working
directory or path to a GTAP data HAR file.}

\item{header_rename}{A named vector (default is \code{NULL}). Supplies
custom origin and destination matches for database headers that
will supercede any matching default result. The name of each
element will be used to identify the header to rename, and the
value will become the new name. Note that corresponding changes
to the Tablo file are not conducted.}

\item{coefficient_rename}{A named vector (default is \code{NULL}).
Supplies custom origin and destination matches for database
coefficients that will supercede any matching default result. The
name of each element will be used to identify the coefficient to
rename, and the value will become the new name. Note that
corresponding changes to the Tablo file are not conducted.}

\item{preagg_data}{A named vector (default is \code{NULL}).
Path pair which replaces existing preaggregation (unmodified)
data headers. The name of each element determines the header for
which to replace data. The value is a path to a .csv. The
user-provided data must contain all corresponding sets and
associated elements as in the original data to be replaced, as
well as a "Value" column with new values. This replacement will be
subject to structure checks and set aggregations.}

\item{postagg_data}{A named vector (default is \code{NULL}).
Path pair which replaces existing aggregated data headers. The
user-provided data must contain all aggregation-specific
corresponding sets and associated elements as in the aggregated
data to be replaced as well as a "Value" column with new values.
This replacement will be subject to structure checks according to
selected set aggregations.}

\item{verbose}{Logical of length 1 (default is \code{FALSE}). If \code{TRUE} output
function-specific diagnostics.}
}
\value{
A list of basedata configuration options.
}
\description{
\code{teems_base()} loads basedata-specific data and
configurations as well as checks database compatibility. The
output of this function is a required input to the \code{"base_config"}
argument within the \code{\link[=teems_deploy]{teems_deploy()}} function.

Learn more about this function including Tablo file limitations in
\code{vignette("something")}
}
\details{
\code{teems_base()} return values have no purpose used in
isolation and are rather combined with user inputs in other
\code{teems} package functions within \code{\link[=teems_deploy]{teems_deploy()}} to produce a
path-dependent pipeline resulting in solver-ready input files for
\code{\link[=teems_solve]{teems_solve()}}.
}
\examples{
# See `vignette("teems-input_files")` for examples and explanation

files <- c("gddat.har", "SAVE.csv", "SAVE_preagg.csv", "SAVE_postagg.csv")
paths <- sapply(X = files, FUN = teems_example, simplify = FALSE)
list2env(x = paths, envir = environment())

# Renaming existing data headers and coefficients can be useful
# to distinguish from existing variables (e.g., pop) or for header
# and coefficient consistency (e.g., VTWR, VTMFSD).
base_config <- teems_base(dat_har = gddat.har,
                          header_rename = c("POP" = "TPOP"),
                          coefficient_rename = c("POP" = "TPOP"))

# Users may introduce data here in two ways: pre-aggregation and
# post-aggregation. Pre-aggregation data must contain all tuples of
# the data that it is to replace, including a `Value` column. Set
# names must follow the `teems` convention (see vignette).
head(read.csv(SAVE.csv))
head(read.csv(SAVE_preagg.csv))

base_config <- teems_base(dat_har = gddat.har,
                          preagg_data = c("SAVE" = SAVE_preagg.csv))

# Post-aggregation data must contain all tuples of the aggregated
# data that it is to replace, including a `Value` column.

# sample region mapping
reg_mapping <- teems_query(component = "mapping",
                           database = "v9",
                           name = c(REG = "big3"))
head(read.csv(postagg_SAVE))
head(reg_mapping)
all(is.element(el = reg_mapping[["big3"]],
               set = read.csv(SAVE_postagg.csv)[["REGr"]]))

base_config <- teems_base(dat_har = path_to_har,
                          postagg_data = c("SAVE" = SAVE_postagg.csv))

# When `verbose` == `TRUE`, the detected GTAP Database version,
# reference year, and data format will be printed to the console.
base_config <- teems_base(dat_har = gddat.har,
                          verbose = TRUE)

unlink(x = temp_dir, recursive = TRUE)

}
\seealso{
\code{\link[=teems_deploy]{teems_deploy()}} for loading the output of this
function.
}
