% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/usr_teems_solve.R
\name{teems_solve}
\alias{teems_solve}
\title{Configure and solve model}
\usage{
teems_solve(
  cmf_path = NULL,
  n_tasks = 1L,
  n_subintervals = 1L,
  matrix_method = c("LU", "DBBD", "SBBD", "NDBBD"),
  solution_method = c("Johansen", "mod_midpoint"),
  steps = c(2L, 4L, 8L),
  laA = 300L,
  laD = 200L,
  laDi = 500L,
  terminal_run = FALSE,
  docker_tag = "beta",
  tab_file = NULL,
  closure_file = NULL,
  shock_file = NULL,
  ...
)
}
\arguments{
\item{n_tasks}{Integer length 1 (default is \code{1L}), number of tasks
to run in parallel. Must be \code{1L} if \code{"matrix_method"} == "LU".}

\item{n_subintervals}{Integer length 1 (default is \code{1L}), number of
subintervals for the applied shock. More subintervals may
alleviate accuracy issues stemming from large shock magnitudes.}

\item{matrix_method}{Character of length 1, matrix solution method
(default is \code{"LU"}). Choices:
\itemize{
\item \code{"LU"}: Standard LU decomposition, the most robust and
potentially slowest for a large model. \code{"n_tasks"} must be \code{1L}
if \code{"matrix_method"} == "LU". For use with both static and
dynamic models.
\item \code{"DBBD"}: Doubly bordered block diagonal, parallel solution
method for static models. Potentially faster than \code{"LU"} although
less robust.
\item \code{"SBBD"}: Singly bordered block diagonal, parallel solution
method for intertemporal models. Potentially faster than \code{"LU"}
although less robust.
\item \code{"NDBBD"}: Nested doubly bordered block diagonal, parallel
solution method for large intertemporal models with many
timesteps.
}}

\item{solution_method}{The solution method to be used, default is
the "one-step" \code{"Johansen"}. Choices:
\itemize{
\item \code{"Johansen"}: The Johansen method is fast however it should
only be used as a rough approximation due to handling of
nonlinear equations. See:
https://www.copsmodels.com/gpmanual.htm#gpd1.2.13
\item \code{"mod_midpoint"}: The modified midpoint method
performs multiple passes. See:
https://www.copsmodels.com/gpmanual.htm#gpd3.12.2
}}

\item{steps}{Integer length 3 (default is \code{c(2L, 4L, 8L)}). A
vector of steps for the modified midpoint method, must be all odd
or all even and length 3. Additional steps may improve accuracy
for some model runs.}

\item{laA}{Integer length 1 (default is \code{300L}). The laA memory
parameter for solver pertaining to matrix methods \code{"LU"} and
\code{"SBBD"}. Value is in percentages. Increase gradually if prompted
via "Error return from MA48B/BD because LA is ..."}

\item{laD}{Integer length 1 (default is \code{200L}). The laD memory
parameter for solver pertaining to matrix methods \code{"DBBD"} and
\code{"NDBBD"}. Value is in percentages. Increase gradually if
prompted via "Error return from MA48B/BD because LA is ..."}

\item{laDi}{Integer length 1 (default is \code{500L}). The laDi memory
parameter for solver pertaining to matrix method \code{"NDBBD"}. Value
is in percentages. Increase gradually if prompted via "Error return
from MA48B/BD because LA is ..."}

\item{terminal_run}{Logical length 1 (default is \code{FALSE}). When
\code{TRUE}, the function is exited without running the solver. This
allows the user to close any R IDE or other programs prior to
running from the terminal.}

\item{docker_tag}{Character length 1 (default \code{"latest"}). Docker
tag to specify the which Docker image is use.}

\item{tab_file}{Character of length 1, path to a local Tablo model
file or selection of an internal Tablo file. Internally available
Tablo files currently include GTAP-INTv1, GTAPv62, and GTAPv7.}

\item{closure_file}{Character of length 1, file name in working
directory or path to a closure file.}

\item{shock_file}{Character of length 1, file name in working
directory or path to a csv representing the final shock file. No
checks or modifications will be conducted on this file.}

\item{...}{A named list of input files necessary for an "in-situ"
model run. Names must correspond to "File" statements within the
model Tablo file. Elements correspond to file paths where these
files are found. No checks or modifications are conducted on
input files used in this manner.}
}
\value{
The path to the diagnostic output file.
}
\description{
\code{teems_solve()} solves the constrained optimization
problem according to a wide range of runtime configuration
options. In order to solve, a \code{teems} Docker image must be
prebuilt according to these specifications. Singularity,
accuracy, and error checks are carried out following a successful
run.

Learn more about this function including Tablo file limitations
in \code{vignette("something")}
}
\examples{
# See `vignette("something")` for examples and explanation


}
\seealso{
\code{\link[=teems_parse]{teems_parse()}} for retrieving model results.
}
