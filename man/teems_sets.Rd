% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teems_sets.R
\name{teems_sets}
\alias{teems_sets}
\title{Load set specifications}
\usage{
teems_sets(set_input, aux_set = NULL, ..., model_version = NULL, quiet = FALSE)
}
\arguments{
\item{model_version}{Character of length 1 (default is \code{NULL}), GTAP model
base version corresponding to the selected Tablo model file. Note that this
is distinct from the data format of input data files. If \code{NULL}, the first
200 characters of the Tablo file will be parsed with \code{model_version}
assigned the value following "Version". Choices:
\itemize{
\item \code{"v6.2"}: Classic GTAP model version 6.2 and models based off
this version. See:
https://www.gtap.agecon.purdue.edu/resources/res_display.asp?RecordID=2458
\item \code{"v7.0"}: Standard GTAP model version 7 and models based off this
version. See: https://jgea.org/ojs/index.php/jgea/article/view/47
}}

\item{quiet}{Logical of length 1 (default is \code{FALSE}). If \code{TRUE},
function-specific diagnostics are silenced.}

\item{set_har}{Character of length 1, file name in working
directory or path to a GTAP set HAR file.}

\item{region_mapping}{Character of length 1, name of internal
region mapping (see \code{\link[=teems_query]{teems_query()}}) or path to a two-column
csv representing a database-specific region mapping.}

\item{sector_mapping}{Character of length 1, name of internal
sectorf mapping (see \code{\link[=teems_query]{teems_query()}}) or path to a two-column
csv representing a database-specific sector mapping.}

\item{endowment_mapping}{Character of length 1, name of internal
endowment mapping (see \code{\link[=teems_query]{teems_query()}}) or path to a two-column
csv representing a database-specific endowment mapping.}

\item{time_steps}{Integer vector of variable length (default is \code{NULL}).
\code{"time_steps"} are inputted as the desired chronological years of steps
including initial reference year.}

\item{interval_switch}{Logical length 1 (default is \code{FALSE}). Switch
controlling interpretation of \code{"time_steps"} input. When \code{TRUE}, each
element of \code{"time_steps"} is interpreted as an interval between 2 time
steps.}
}
\value{
A list of set configuration options.
}
\description{
\code{teems_sets()} loads set-specific data and specifies
core (i.e., read-in) model sets which include region, sector, and
endowment mappings. The output of this function is a required
input to the \code{"set_config"} argument within the \code{\link[=teems_deploy]{teems_deploy()}}
function.
}
\details{
\code{teems_sets()} return values have no purpose used in
isolation and are rather combined with user inputs in other
\code{teems} package functions within \code{\link[=teems_deploy]{teems_deploy()}} to produce a
path-dependent pipeline resulting in solver-ready input files for
\code{\link[=teems_solve]{teems_solve()}}.
}
\examples{
# See `vignette("something")` for examples and explanation

temp_dir <- tools::R_user_dir(package = "teems", "cache")
if (!dir.exists(temp_dir)) {
  dir.create(temp_dir)
}
file.copy(from = c(teems_example(path = "gdset.har"),
                   teems_example(path = "user_mapping.csv")),
          to = temp_dir)
path_to_har <- file.path(temp_dir, "gdset.har")

# Set mappings can be loaded from internally available defaults,
# see [`teems_query()`] or provided in the form of a 2-column csv
# by the user. In the latter case, the first column must contain
# all set- and database-specific elements and the second column
# specifies the respective mapping.
head(read.csv(file.path(temp_dir, "usr_mapping.csv")))
set_config <- teems_sets(set_har = path_to_har,
                         region_mapping = "AR5",
                         sector_mapping = file.path(temp_dir, "usr_mapping.csv"),
                         endowment_mapping = "labor_agg")

unlink(x = temp_dir, recursive = TRUE)

}
\seealso{
\code{\link[=teems_query]{teems_query()}} for available internal set mappings.

\code{\link[=teems_deploy]{teems_deploy()}} for loading the output of this
function.
}
