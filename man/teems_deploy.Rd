% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teems_deploy.R
\name{teems_deploy}
\alias{teems_deploy}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
Loads all specifications executes a model-specifc \code{targets}
pipeline}
\usage{
teems_deploy(
  model_config,
  data_config,
  set_config,
  model_name = "teems",
  base_dir = tempdir(),
  quiet = FALSE,
  tar_load_everything = FALSE,
  tar_visnetwork = FALSE,
  .testing = FALSE
)
}
\arguments{
\item{model_config}{A list generated by the function
\code{\link[=teems_model]{teems_model()}}.}

\item{set_config}{A list generated by the function
\code{\link[=teems_sets]{teems_sets()}}.}

\item{model_name}{Character of length 1 (default is \code{"teems"}),
descriptive model name. This string determines the name of
model-specific directory to be written within \code{"base_dir"} as
well as the \code{targets} pipeline file that will be run to generate
all input files. Note that to access the \code{targets} store for a
previously established model, both the \code{"model_name"} and
\code{"base_dir"} must remain constant.}

\item{base_dir}{Character of length 1 (default is \code{tempdir()}),
directory where the model-specific directory and model pipeline
will be written. If \code{tempdir()}, the \code{targets} store and other
model-specific files and directories will not persist across R
sessions. If a persistent directory is specified, some targets
will not need to be rerun in successive R sessions.}

\item{quiet}{Logical of length 1 (default is \code{FALSE}). If \code{TRUE},
function-specific diagnostics are silenced.}

\item{.testing}{Logical of length 1 (default is \code{FALSE}), developer
option. If \code{TRUE}, \code{\link[targets:tar_make]{targets::tar_make()}} will be called with
\code{"callr_function = NULL"}. This allows the model pipeline to be
halted for debugging and/or development purposes through
placement of \code{browser()}.}

\item{base_config}{A list generated by the function
\code{\link[=teems_base]{teems_base()}}.}

\item{param_config}{A list generated by the function
\code{\link[=teems_param]{teems_param()}}.}

\item{closure_config}{A list generated by the function
\code{\link[=teems_closure]{teems_closure()}} (default is \code{NULL}). If \code{NULL}, a NULL shock
will be executed on the standard closure, effectively returning
the base data. This can be useful for testing purposes or to
return all model coefficient values at the current reference
year.}

\item{time_config}{A list generated by the function
\code{\link[=teems_time]{teems_time()}} (default is \code{NULL}). This argument is only
required in the case of non-static model runs.}
}
\value{
File path to a CMF file necessary to execute
\code{\link[=teems_solve]{teems_solve()}}.
}
\description{
\code{teems_deploy()} creates and executes a
\href{https://books.ropensci.org/targets/}{\code{targets}} pipeline for all
loaded specifications according to their various path
dependencies. Outputs from \code{\link[=teems_model]{teems_model()}}, \code{\link[=teems_base]{teems_base()}},
\code{\link[=teems_param]{teems_param()}}, and \code{\link[=teems_sets]{teems_sets()}} are required inputs to
\code{"model_config"}, \code{"base_config"}, \code{"param_config"}, and
\code{"set_config"} respectively.

Learn more about this function including Tablo file limitations
in \code{vignette("something")}
}
\details{
\code{teems_deploy()} consolidates all user inputs and carries
out all operations necessary to run a CGE model. The output file
path serves as a required input to \code{\link[=teems_solve]{teems_solve()}}.
}
\examples{
\dontrun{
# A GTAPv6.2 3-region, 6-sector, 4-endowment static model run with
# numeraire shock. Note that the GTAPv7 is currently only
# compatible with a separate data format not available in freely
# distributed GTAP Databases. Future work will produce a function
# to utilize v6.2 data compatible with GTAPv7 and v7 compatible
# data with v6.2-based models.

v6.2_model_config <- teems_model(tab_file = "GTAPv6.2",
                                ndigits = 8,
                                verbose = TRUE)

v6.2_base_config <- teems_base(base_har = "~/dat/GTAP/v9/2011/gddat.har")

v6.2_param_config <- teems_param(par_har = "~/dat/GTAP/v9/2011/gdpar.har")

v6.2_set_config <- teems_sets(set_har = "~/dat/GTAP/v9/2011/gdset.har",
                             region_mapping = "big3",
                             sector_mapping = "macro_sector",
                             endowment_mapping = "labor_agg",
                             verbose = TRUE)

v6.2_numeraire_shk <- teems_shock(var = "pfactwld",
                                 type = "uniform",
                                 value = 1)

v6.2_closure_config <- teems_closure(shock = v6.2_numeraire_shk)

v6.2_cmf_path <- teems_deploy(model_config = v6.2_model_config,
                             base_config = v6.2_base_config,
                             param_config = v6.2_param_config,
                             set_config = v6.2_set_config,
                             closure_config = v6.2_closure_config,
                             verbose = TRUE)

# A GTAP-INTv1 3-region, 6-sector, 4-endowment, 5 timestep
# intertemporal model run with numeraire shock.
INTv1_model_config <- teems_model(tab_file = "GTAP-INTv1",
                                  ndigits = 8,
                                  verbose = TRUE)

INTv1_base_config <- teems_base(base_har = "~/dat/GTAP/v9/2011/gddat.har")

INTv1_param_config <- teems_param(par_har = "~/dat/GTAP/v9/2011/gdpar.har")

INTv1_set_config <- teems_sets(set_har = "~/dat/GTAP/v9/2011/gdset.har",
                               region_mapping = "big3",
                               sector_mapping = "macro_sector",
                               endowment_mapping = "labor_agg",
                               verbose = TRUE)

INTv1_numeraire_shk <- teems_shock(var = "pfactwld",
                                   type = "uniform",
                                   value = 1)

INTv1_closure_config <- teems_closure(shock = INTv1_numeraire_shk)

INTv1_time_config <- teems_time(time_steps = c(2011, 2012, 2015, 2020, 2030))

INTv1_cmf_path <- teems_deploy(model_config = INTv1_model_config,
                               base_config = INTv1_base_config,
                               param_config = INTv1_param_config,
                               set_config = INTv1_set_config,
                               closure_config = INTv1_closure_config,
                               time_config = INTv1_time_config,
                               verbose = TRUE)

# In the examples above the `targets` store and model input files
# will be written to a per-session temporary folder that will not
# persist. In order to fully take advantage of the `targets`
# package underpinning `teems`, `"model_name"` and `"base_dir"`
# arguments allow for model directories to persist across sessions.

custom_path <- teems_deploy(model_config = INTv1_model_config,
                            base_config = INTv1_base_config,
                            param_config = INTv1_param_config,
                            set_config = INTv1_set_config,
                            closure_config = INTv1_closure_config,
                            time_config = INTv1_time_config,
                            model_name = "custom_INT",
                            base_dir = path.expand(path = "~"))

# Example: Pre-model run directory layout assuming path.expand("~")
# evaluates to /home/user
# Any of the objects above in (/home/user/custom_INT/store/objects)
# can be inspected using [`targets::tar_read()`]. For example, the
# final model closure:
targets::tar_read(name = final.closure,
                  store = "/home/user/custom_INT/store")
}
}
\seealso{
\code{\link[=teems_model]{teems_model()}} for generating the input to
\code{"model_config"}.

\code{\link[=teems_base]{teems_base()}} for generating the input to
\code{"base_config"}.

\code{\link[=teems_param]{teems_param()}} for generating the input to
\code{"param_config"}.

\code{\link[=teems_sets]{teems_sets()}} for generating the input to
\code{"set_config"}.

\code{\link[=teems_closure]{teems_closure()}} for generating the input to
\code{"closure_config"}.

\code{\link[=teems_time]{teems_time()}} for generating the input to
\code{"time_config"}.

\code{\link[=teems_solve]{teems_solve()}} for loading the ouput of this function.
}
