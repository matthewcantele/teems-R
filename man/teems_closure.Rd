% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/usr_teems_closure.R
\name{teems_closure}
\alias{teems_closure}
\title{Load and consolidate closure}
\usage{
teems_closure(
  swap_in = NULL,
  swap_out = NULL,
  shock = NULL,
  closure_file = NULL,
  shock_file = NULL,
  quiet = FALSE
)
}
\arguments{
\item{swap_in}{Character of length 1 (default is \code{NULL}) or in the
case of a swap, output of \code{\link[=teems_swap]{teems_swap()}}. Multiple swaps "in"
should be provided in the form of a list of objects created with
\code{\link[=teems_swap]{teems_swap()}}.}

\item{swap_out}{Character of length 1 (default is \code{NULL}) or in the
case of a swap, output of \code{\link[=teems_swap]{teems_swap()}}. Multiple swaps "out"
should be provided in the form of a list of objects created with
\code{\link[=teems_swap]{teems_swap()}}.}

\item{shock}{An object or in the case of multiple shocks, list of
objects produced by \code{\link[=teems_shock]{teems_shock()}} (default is \code{NULL}). In the
case of \code{NULL}, a \code{NULL} shock will be carried out which
effectively returns the base data.}

\item{closure_file}{Character of length 1, file name in working
directory or path to a closure file.}

\item{shock_file}{Character of length 1, file name in working
directory or path to a csv representing the final shock file. No
checks or modifications will be conducted on this file.}
}
\value{
A list of closure configuration options.
}
\description{
\code{teems_closure()} is a core function that establishes
the direction of any swaps and consolidates swaps and shocks. It
also loads any user-provided closure file allowing for
specification of endogenous/exogenous variable status. Full
variable swaps can be directly specified here or passed in as
output from \code{\link[=teems_swap]{teems_swap()}}.
}
\details{
\code{teems_closure()} return values have no purpose used in
isolation and are rather combined with user inputs in other
\code{teems} package functions within \code{\link[=teems_deploy]{teems_deploy()}} to produce a
path-dependent pipeline resulting in solver-ready input files for
\code{\link[=teems_solve]{teems_solve()}}.
}
\examples{
# See `vignette("something")` for examples and explanation.

temp_dir <- tools::R_user_dir(package = "teems", "cache")
if (!dir.exists(temp_dir)) {
  dir.create(temp_dir)
}
file.copy(from = c(teems_example(path = "user_closure.cls")),
          to = temp_dir)

# Simple single variable (length 1 for both directions) swaps can
# be directly specified here without the need to use teems_swap().
qfd_shk <- teems_shock(var = "y",
                       type = "uniform",
                       value = 0.5)

simple_swap <- teems_closure(swap_in = "qfd",
                             swap_out = "tfd",
                             shock = qfd_shk)

# For more complex swaps teems_swap() must be used.
qfd_row_in <- teems_swap(var = "qfd",
                         type = "uniform",
                         value = 0.5,
                         REGs = "row")

tfd_row_out <- teems_swap(var = "tfd",
                          type = "uniform",
                          value = 0.5,
                          REGs = "row")

qfd_row_shk <- teems_shock(var = "qfd",
                           type = "uniform",
                           value = 0.5)

\dontrun{
complex_swap <- teems_closure(swap_in = qfd_row_in,
                              swap_out = tfd_row_out,
                              shock = qfd_row_shk)
}

# teems_swap() must also be used in the case of multiple swaps in
# the same direction. Multiple swaps and shocks must be loaded as a
# list.
y_in <- teems_swap(var = "y")
incomeslack_out <- teems_swap(var = "incomeslack")

y_shk <- teems_shock(var = "y",
                     type = "uniform",
                     value = 2)

\dontrun{
complex_multi <- teems_closure(swap_in = list(qfd_row_in, y_in),
                               swap_out = list(tfd_row_out, incomeslack_out),
                               shock = list(qfd_row_shk, y_shk))
}

# Users can load their own closure file with `NULL` swaps to use as
# is or conduct swaps on the loaded file.
readLines(file.path(temp_dir, "user_closure.cls"))

\dontrun{
user_closure <- teems_closure(shock = y_shk,
                              closure_file = file.path(temp_dir, "user_closure.cls"))
}

unlink(x = temp_dir, recursive = TRUE)

}
\seealso{
\code{\link[=teems_swap]{teems_swap()}} for loading both simple full variable swaps as well as element-specific swaps.

\code{\link[=teems_shock]{teems_shock()}} for loading shocks.

\code{\link[=teems_deploy]{teems_deploy()}} for loading the output of this
function.
}
