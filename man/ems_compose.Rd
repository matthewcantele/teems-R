% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ems_compose.R
\name{ems_compose}
\alias{ems_compose}
\title{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} Compose model results}
\usage{
ems_compose(
  cmf_path,
  type = c("variable", "coefficient", "set", "inputdata"),
  name = NULL
)
}
\arguments{
\item{cmf_path}{Character length 1 (default is \code{NULL}), path to the
cmf file generated by \code{\link[=teems_deploy]{teems_deploy()}} or created via an
"in-situ" run with \code{\link[=ems_solve]{ems_solve()}}.}

\item{type}{Character length 1, type of data to parse (default
includes all). Choices:
\itemize{
\item \code{"variable"}: Percentage change values for model variables
\item \code{"coefficient"}: Absolute values for model coefficients
\item \code{"set"}: Model sets
\item \code{"inputdata"}: Merged pre- and post-model basedata values
}}

\item{name}{Character vector, a subset of the selected type
filtered by name.}
}
\value{
A list containing the parsed model results according
to the specified type.
}
\description{
\code{ems_compose()} retrieves and processes results
from a solved model run. Results are parsed according to the
specified type (variables, coefficients, or base data). Data
validation and consistency checks are performed during the
parsing process.
}
\examples{
\dontrun{
inputdata <- ems_compose(cmf_path = cmf_path, type = "inputdata")
variables <- ems_compose(cmf_path = cmf_path, type = "variable")
coefficients <- ems_compose(cmf_path = cmf_path, type = "coefficient")
sets <- ems_compose(cmf_path = cmf_path, type = "set")

qfd <- ems_compose(cmf_path = cmf_path, type = "variable", name = "qfd")
}

}
\seealso{
\code{\link[=ems_solve]{ems_solve()}} for running the model simulation.
}
